services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    env_file:
      - .env

  kafka:
    image: wurstmeister/kafka
    container_name: stock_checker-kafka-1
    networks:
      default:
        aliases:
          - kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    env_file:
      - .env

  stock_checker-postgres:
    image: postgres:15
    container_name: stock_checker-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: stocks_db
    ports:
      - "5432:5432"
    env_file:
      - .env

  dashboard:
    build: ./dashboard
    ports:
      - "8501:8501"
    depends_on:
      - stock_checker-postgres
    volumes:
      - ./ml:/app/ml 
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: stocks_db
      POSTGRES_HOST: stock_checker-postgres
      POSTGRES_PORT: 5432
    env_file:
      - .env
      
  producer:
    build: ./producer
    container_name: stock_checker-producer
    depends_on:
      - kafka
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      FINNHUB_API_KEY: ${FINNHUB_API_KEY} 
    command: python producer.py
    env_file:
      - .env

  consumer:
    build: ./consumer
    depends_on:
      - kafka
      - stock_checker-postgres
    environment:
      KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
      KAFKA_TOPIC: ${KAFKA_TOPIC}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: stock_checker-postgres
      POSTGRES_PORT: ${POSTGRES_PORT}
    env_file:
      - .env
volumes:
  postgres_data: